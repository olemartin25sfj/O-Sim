services:
  simulatorservice:
    build:
      context: ./src
      dockerfile: SimulatorService/Dockerfile
    depends_on:
      - nats
    labels:
      - traefik.enable=true
      - traefik.http.routers.simulator.rule=PathPrefix(`/api/simulator`)
      - traefik.http.services.simulator.loadbalancer.server.port=5001

  environmentservice:
    build:
      context: ./src
      dockerfile: EnvironmentService/Dockerfile
    depends_on:
      - nats
    labels:
      - traefik.enable=true
      - traefik.http.routers.environment.rule=PathPrefix(`/api/environment`)
      - traefik.http.services.environment.loadbalancer.server.port=5002

  loggerservice:
    build:
      context: ./src
      dockerfile: LoggerService/Dockerfile
    depends_on:
      - nats
    labels:
      - traefik.enable=true
      - traefik.http.routers.logger.rule=PathPrefix(`/api/logs`)
      - traefik.http.services.logger.loadbalancer.server.port=5003

  alarmservice:
    build:
      context: ./src
      dockerfile: AlarmService/Dockerfile
    depends_on:
      - nats
    labels:
      - traefik.enable=true
      - traefik.http.routers.alarm.rule=PathPrefix(`/api/alarms`)
      - traefik.http.services.alarm.loadbalancer.server.port=5004

  autopilotservice:
    build:
      context: ./src
      dockerfile: AutopilotService/Dockerfile
    depends_on:
      - nats
    labels:
      - traefik.enable=true
      - traefik.http.routers.autopilot.rule=PathPrefix(`/api/autopilot`)
      - traefik.http.services.autopilot.loadbalancer.server.port=5005

  gatewayproxy:
    build:
      context: ./src
      dockerfile: GatewayProxyService/Dockerfile
    depends_on:
      - nats
    ports:
      - "5000:5000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.gatewayproxy-ws.rule=PathPrefix(`/ws`)
      - traefik.http.services.gatewayproxy.loadbalancer.server.port=5000
      - traefik.http.routers.gatewayproxy-routes.rule=PathPrefix(`/api/routes`)

  traefik:
    image: traefik:v2.11
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  webdashboard:
    build:
      context: ./src/Frontend/WebDashboard
      dockerfile: Dockerfile
    depends_on:
      - traefik
      - gatewayproxy
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=PathPrefix(`/`)
      - traefik.http.services.dashboard.loadbalancer.server.port=3000
      - traefik.http.routers.dashboard.priority=1

  nats:
    image: nats:2.10.16-alpine
    container_name: o-sim-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: -js
    healthcheck:
      test: ["CMD", "nats", "req", "--raw", "--timeout", "1s", "localhost:4222", "INFO"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - nats_data:/data

volumes:
  nats_data:
    driver: local
