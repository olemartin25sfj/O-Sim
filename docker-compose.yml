# docker-compose.yml

services:
  simulatorservice:
    build:
      context: ./src
      dockerfile: SimulatorService/Dockerfile
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.simulator.rule=PathPrefix(`/api/simulator`)"
      - "traefik.http.services.simulator.loadbalancer.server.port=5001"

  environmentservice:
    build:
      context: ./src
      dockerfile: EnvironmentService/Dockerfile
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.environment.rule=PathPrefix(`/api/environment`)"
      - "traefik.http.services.environment.loadbalancer.server.port=5002"

  loggerservice:
    build:
      context: ./src
      dockerfile: LoggerService/Dockerfile
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logger.rule=PathPrefix(`/api/logs`)"
      - "traefik.http.services.logger.loadbalancer.server.port=5003"

  autopilotservice:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.autopilot.rule=PathPrefix(`/api/autopilot`)"
      - "traefik.http.services.autopilot.loadbalancer.server.port=80"
    build:
      context: ./src
      dockerfile: AutopilotService/Dockerfile
    depends_on:
      - nats

  gatewayproxy:
    build:
      context: ./src
      dockerfile: GatewayProxyService/Dockerfile
    depends_on:
      - nats
    ports:
      - "5000:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gatewayproxy.rule=PathPrefix(`/ws`)"
      - "traefik.http.services.gatewayproxy.loadbalancer.server.port=5000"
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Eksempel på hvordan du kan eksponere en backend-tjeneste via Traefik:
  # autopilotservice:
  #   build: ./src/AutopilotService
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.autopilot.rule=PathPrefix(`/api/autopilot`)"
  #     - "traefik.http.services.autopilot.loadbalancer.server.port=80"
  webdashboard:
    build:
      context: ./src/Frontend/WebDashboard
      dockerfile: Dockerfile
    depends_on:
      - traefik
      - gatewayproxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.dashboard.priority=1"  # Laveste prioritet, matcher bare hvis ingen andre matcher

  nats:
    image: nats:2.10.16-alpine # Bruk en stabil versjon av NATS
    container_name: o-sim-nats
    ports:
      - "4222:4222" # Klientport
      - "8222:8222" # Monitoring port (HTTP)
    command: -js # Aktiver JetStream (selv om du ikke bruker den aktivt i starten, er det greit å ha den klar)
    healthcheck:
      test: ["CMD", "nats", "req", "--raw", "--timeout", "1s", "localhost:4222", "INFO"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped # Start containeren automatisk ved systemstart eller feil
    volumes:
      - nats_data:/data # Volum for vedvarende data (f.eks. for JetStream)

volumes:
  nats_data:
    driver: local