name: Build and Push Docker images

on:
  push:
    branches: [master]
    tags: ["v*"]
  pull_request:
    branches: [master]

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - name: AlarmService
            context: src/AlarmService
            file: Dockerfile
            image: o-sim-alarmservice
          - name: AutopilotService
            context: src/AutopilotService
            file: Dockerfile
            image: o-sim-autopilotservice
          - name: EnvironmentService
            context: src/EnvironmentService
            file: Dockerfile
            image: o-sim-environmentservice
          - name: LoggerService
            context: src/LoggerService
            file: Dockerfile
            image: o-sim-loggerservice
          - name: SimulatorService
            context: src/SimulatorService
            file: Dockerfile
            image: o-sim-simulatorservice
          - name: GatewayProxyService
            context: src/GatewayProxyService
            file: Dockerfile
            image: o-sim-gatewayproxy
          - name: WebDashboard
            context: src/Frontend/WebDashboard
            file: Dockerfile
            image: o-sim-webdashboard

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image for ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.file }}
          push: true
          platforms: linux/amd64,linux/arm64
          # Tag with commit sha, latest, and git tag (only when the workflow is triggered by a tag)
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service.image }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service.image }}:latest
            ${{ startsWith(github.ref, 'refs/tags/') && format('ghcr.io/{0}/{1}:{2}', github.repository_owner, matrix.service.image, github.ref_name) || '' }}
          # Note: disabled build cache-from/cache-to due to intermittent 'failed to calculate checksum' errors
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Scan pushed image with Trivy (HIGH/CRITICAL -> fail)
        if: startsWith(github.ref, 'refs/tags/')
        # Use the official Trivy image to scan the just-pushed image by sha tag
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/${{ matrix.service.image }}:${{ github.sha }}
          echo "Scanning $IMAGE for HIGH/CRITICAL vulnerabilities..."
          docker run --rm --security-opt seccomp=unconfined aquasec/trivy:0.43.1 image --severity HIGH,CRITICAL --exit-code 1 "$IMAGE"
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
